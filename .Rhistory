"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt()
data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt()
data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt() %>%
cols_align(align = "left")
data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt() %>%
gt::cols_align(align = "left")
model5 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex + POST_TEMP_TIME,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5))
model6 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex + Procedure_duration,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5, model6))
library(nur1027functions)
model1 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI,family = "binomial")
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
model3 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE,family = "binomial")
model4 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex,family = "binomial")
model5 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex + POST_TEMP_TIME,family = "binomial")
model6 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex + Procedure_duration,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5, model6))
model6 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex + + POST_TEMP_TIME+ Procedure_duration,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5, model6))
data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time of day that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt() %>%
gt::cols_align(align = "left") %>%
gt::as_raw_html()
data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time of day that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt() %>%
gt::cols_align(align = "left") %>%
gt::as_raw_html()
library(tidyverse)
data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time of day that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt() %>%
gt::cols_align(align = "left") %>%
gt::as_raw_html()
table <- data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time of day that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt() %>%
gt::cols_align(align = "left")
gt::gtsave(table, "table.png")
gt::gtsave(table, "table.pdf")
table <- data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable - temp <36°C",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Time of day that outcome variable 'hypothermia' was measured")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt() %>%
gt::cols_align(align = "left")
gt::gtsave(table, "table.png")
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy %>%
mutate_if(is.numeric, ~round(., 2)) %>%
gt() %>%
data_color(
columns = vars(oddsratio),
colors = "red")%>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
tidy <- tidy %>%
mutate_if(is.numeric, ~round(., 2)) %>%
gt() %>%
data_color(
columns = vars(oddsratio),
colors = "red")%>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
gt::gtsave(tidy, "or.png")
devtools::install_github("awconway/nur1027functions")
library(nur1027functions)
library(tidyverse)
model1 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI,family = "binomial")
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
model3 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE,family = "binomial")
model4 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex,family = "binomial")
model5 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex + POST_TEMP_TIME,family = "binomial")
model6 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex + + POST_TEMP_TIME+ Procedure_duration,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5, model6))
model7 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex +
POST_TEMP_TIME+ Procedure_duration + ROOM_TEMP,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5, model6))
stargazer2(list(model1, model2, model3, model4, model5, model6, model7))
temp_logistic$POST_TEMP_TIME
source('~/NUR1027-FALL-2019/exercises/exc_09_03.R', echo=TRUE)
model8 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex +
Time_theatre+ Procedure_duration + ROOM_TEMP + Weight ,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5, model6, model7, model8))
devtools::install_github("awconway/nur1027functions")
library(nur1027functions)
library(tidyverse)
colnames(temp_logistic)
table <- data.frame(colnames(temp_logistic), Definition=c("Study ID",
"Body mass index",
"Outcome variable - temp <36°C",
"Use of propofol for sedation",
"Male or Female",
"Height in cm",
"Weight in kg",
"Inpatient or outpatient",
"Received oral sedative premedication before procedure",
"Room temperature in degrees Celsius",
"Total dose of midazolam",
"Total dose of fentanyl",
"Total dose of propofol",
"Total time in cath lab",
"Procedure duration",
"Age in years",
"Percutaneous coronary intervention",
"Electrophysiology study",
"Electrophysiology study with radiofrequency ablation",
"Permanent Pacemaker",
"Implantable cardioverter defibrillator")) %>%
rename("Variable" = colnames.temp_logistic.) %>%
gt::gt() %>%
gt::cols_align(align = "left")
gt::gtsave(table, "table.png")
library(nur1027functions)
library(tidyverse)
model1 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI,family = "binomial")
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
model3 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE,
family = "binomial")
model4 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex,
family = "binomial")
model5 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex +
Time_theatre,family = "binomial")
model6 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex +
Time_theatre+ Procedure_duration,family = "binomial")
model7 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex +
Time_theatre+ Procedure_duration + ROOM_TEMP,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5, model6, model7))
model1 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI,family = "binomial")
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
model3 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE,
family = "binomial")
model4 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex,
family = "binomial")
model5 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex +
Time_theatre,family = "binomial")
model6 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex +
PCI + Procedure_duration,family = "binomial")
model7 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ADMISSION_SOURCE + Sex +
PCI + Procedure_duration + ROOM_TEMP,family = "binomial")
stargazer2(list(model1, model2, model3, model4, model5, model6, model7))
model1 <- temp_logistic %>%
glm(formula = Hypothermic ~ Propofol_used,family = "binomial")
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ Propofol_used + ROOM_TEMP,family = "binomial")
stargazer2(list(model1, model2))
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ Propofol_used + PCI,family = "binomial")
stargazer2(list(model1, model2))
source('~/NUR1027-FALL-2019/exercises/exc_09_03.R', echo=TRUE)
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
model <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,family = "binomial")
tidy <- broom::tidy(model)
tidy <- tidy %>%
mutate(oddsratio= exp(estimate))
confint <- suppressMessages(confint(model)) %>%
exp
tidy <- cbind(tidy, confint)
tidy$term[3] <- "Propofol"
tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt()%>%
data_color(
columns = vars(oddsratio),
colors = "red") %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
gt::gtsave(tidy, "or.png")
tidy <- tidy %>%
mutate_if(is.numeric, ~round(., 1)) %>%
gt()%>%
data_color(
columns = vars(oddsratio),
colors = "red") %>%
cols_label(
estimate = html("&beta;"), oddsratio= "OR"
)
gt::gtsave(tidy, "or_adj.png")
library(nur1027functions)
library(tidyverse)
model1 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI , family = "binomial")
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + ROOM_TEMP , family = "binomial")
stargazer2(list(model1, model2))
model1 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,
family = "binomial")
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ROOM_TEMP,
family = "binomial")
stargazer2(list(model1, model2))
library(nur1027functions)
ci_proportion(589, 1068)
library(nur1027functions)
ci_proportion(29, 50)
library(nur1027functions)
library(tidyverse)
model1 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used,
family = "binomial")
model2 <- temp_logistic %>%
glm(formula = Hypothermic ~ BMI + Propofol_used + ROOM_TEMP,
family = "binomial")
stargazer2(list(model1, model2))
citation()
citation("spiritR")
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
rgbeta <- function(n, mean, var, min = 0, max = 1)
{
dmin <- mean - min
dmax <- max - mean
if (dmin <= 0 || dmax <= 0)
{
stop(paste("mean must be between min =", min, "and max =", max))
}
if (var >= dmin * dmax)
{
stop(paste("var must be less than (mean - min) * (max - mean) =", dmin * dmax))
}
# mean and variance of the standard beta distributed variable
mx <- (mean - min) / (max - min)
vx <- var / (max - min)^2
# find the corresponding alpha-beta parameterization
a <- ((1 - mx) / vx - 1 / mx) * mx^2
b <- a * (1 / mx - 1)
# generate standard beta observations and transform
x <- rbeta(n, a, b)
y <- (max - min) * x + min
return(y)
}
set.seed(272)
masters <- data.frame(leadership = rgbeta(n=100, mean=8, var=5^2, min = 3, max = 15),
degree = "Masters")
non_masters <- data.frame(leadership = rgbeta(n=100, mean=6.5, var=5^2, min = 3, max = 15),
degree = "Bachelors")
data <- rbind(masters, non_masters)
d_hat <- data %>%
specify(leadership ~ degree) %>%
calculate("diff in means", order = c("Masters", "Bachelors"))
set.seed(272)
null_distn <- data %>%
specify(leadership ~ degree) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("Masters", "Bachelors"))
null_distn %>%
ggplot2::ggplot(aes(stat)) +
geom_dotplot(binwidth=0.075, method='histodot', colour = "white", fill = "blue", alpha=0.3) +
scale_y_continuous(limits = c(0,1))+
scale_x_continuous(limits = c(-2.5,3.3), breaks = c(-2, -1, 0, 1, 2, 3))+
theme_minimal()+
labs(x = "Difference in mean leadership score between groups", y = NULL, title = "")+
geom_vline(xintercept = 0, size = 1, color = "black")+
coord_cartesian(clip="off")+
geom_text(x = -1.5, y = 1.1, label = "Lower in Masters group",
check_overlap = TRUE, hjust = "center", fontface = 'bold', size = 5) +
geom_text(x = 1.5, y = 1.1, inherit.aes = FALSE, label = "Higher in Masters group",
check_overlap = TRUE, hjust = "center", fontface = 'bold', size = 5)+
annotate(
geom = "curve", xend = -1.3, yend = 0.25, x = -1.8, y = 0.48,
curvature = .3, arrow = arrow(length = unit(2, "mm")))+
annotate(geom = "text", x = -1.8, y = 0.5, label = "Each dot is a random shuffle", hjust = "center")
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
library(moderndive)
plot <- plot_qol(x=PHQ9, y=GH) +
labs(x = "Depression (PHQ-9)", y= "Quality of life (SF-36)")
plot
plot+
theme_minimal()+
scale_y_continuous(limits = c(0,100))+
scale_x_continuous(limits = c(0,25))+
geom_smooth(method = "lm", se = FALSE)+
annotate(
geom = "curve", xend = 0, yend = 67, x = 7.5, y = 3,
curvature = -.3, arrow = arrow(length = unit(4, "mm"))
) +
annotate(geom = "text", x = 8, y = 3, label = "Intercept (67)", hjust = "left",
size = 5)
plot+
theme_minimal()+
scale_y_continuous(limits = c(0,100))+
scale_x_continuous(limits = c(0,25), breaks = c(0,5,10,15,17.5, 20, 25))+
geom_smooth(method = "lm", se = FALSE)+    coord_cartesian(ylim=c(40, 50))
model <- lm(GH ~ PHQ9, data = data)
moderndive::get_regression_table(model)%>%
gt() %>%
cols_label(
estimate = html("&beta;")
)
plot+
theme_minimal()+
scale_y_continuous(limits = c(0,100))+
scale_x_continuous(limits = c(0,25), breaks = c(0,5,10,15,17.5, 20, 25))+
geom_smooth(method = "lm", se = FALSE)+
annotate(
geom = "segment", xend = 18.5, yend = 42.5, x = 17.5, y = 42.5, color = "red"
) +
annotate(
geom = "segment", xend = 18.5, yend = 42.5-1.42, x = 18.5, y = 42.5, color = "red"
) +
coord_cartesian(ylim=c(40, 50))+
annotate(geom = "text", x = 19, y = 42.5-(1.42/2), label = "1.4 points lower", hjust = "left",
size = 4)
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(infer)
library(gt)
library(nur1027functions)
model <- lm(GH ~ PHQ9, data = data)
